<?php
/**
 * @file
 * A simple module showing how to create a form within a block,
 * which will create a new node. 
 * Created by:  Prof. James Barnett, Babson College 2013.
 */

function csvuploader_menu() {
  $items = array();
  $items['csvupload'] = array(
    'title' => 'Upload a csv to create users in bulk',
    'page callback' => 'csvupload_page',
    'access arguments' => array('access content'),
  );
  return $items;
}

function csvupload_page(){
  $content =  drupal_get_form('csvuploader_form');
  return $content;
}

function csvuploader_block_info() {
  // This example comes from node.module.
  $blocks['create-node-block'] = array(
    'info' => t('Create Node Form'), 
    'cache' => DRUPAL_NO_CACHE,
  );
 return $blocks;
}

function csvuploader_block_view($delta = '') {
  // This example is adapted from node.module.
  $block = array();

  switch ($delta) {
    case 'create-node-block':
      // Note wrapping your text in the t() function allows for easy
      // translations should you ever need your site to show in
      // other languages.
      $block['subject'] = t('Create Node Form');
      $block['content'] = drupal_get_form('csvuploader_form');
      break;
    }
  return $block;
}
/**
 * Implements form api to create a quick discussion group.
 */
function csvuploader_form($form) {
  $form = array();
  $form['container'] = array();
  $form['csv_upload'] = array(
          '#title' => t('Choose a CSV file to upload'),
          '#type' => 'managed_file',
          '#upload_location' => 'public://tmp/',
          '#upload_validators' => array(
             'file_validate_extensions' => array('csv'),
    ),
  );
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Submit Form'),
  );
  return $form;
}

function csvuploader_form_validate($form, &$form_state) {
  $validators = array('file_validate_extensions' => array('csv'));

  // Check for a new uploaded file.
  $file = file_save_upload('csv_upload', $validators);
  //$file = $form_state['values']['csv_upload'];

  if (isset($file)) {
    // File upload was attempted.
    if ($file) {
      // Put the temporary file in form_values so we can save it on submit.
      $form_state['values']['csv_upload'] = $file;
    }
    else {
      // File upload failed.
      form_set_error('csv_upload', t('The file could not be uploaded.'));
    }
  }
}

/**
 * Implements hook_form_submit().
 *
 * Submit the form that creates a quick discussion.
 */
function csvuploader_form_submit($form, &$form_state) {
  $fid = $form_state['values']['csv_upload'];
  $file = file_load($fid);
  $file->status = FILE_STATUS_PERMANENT;
  $file->filename = str_replace(' ', '_', $file->filename);
  file_save($file);

   $data = file_get_contents($file->uri);
   $lines = explode(PHP_EOL, $data);
   $array = array();
   foreach ($lines as $line) {
     $array[] = str_getcsv($line);
   }
   dpm($array);

   foreach($array as $userdata) {
     if($userdata[0] != 'ID') {
       $new_user = array(
         'name' => $userdata[4],
         'pass' => 'passwordnsf', // note: do not md5 the password
         'mail' => $userdata[2],
         'status' => 1,
         'init' => $userdata[2],
         'roles' => array(
           DRUPAL_AUTHENTICATED_RID => 'authenticated user',
           3 => 'custom role',
         ),
      );

      // The first parameter is sent blank so a new user is created.
      user_save('', $new_user); 

     }
   } 

   drupal_set_message('CSV has been uploaded.');

   
  
}

